import { Query, SQL } from 'drizzle-orm/sql';
import { SQLiteDialect } from './dialect';
import { SelectFieldsOrdered } from './operations';
export interface PreparedQueryConfig {
    type: 'sync' | 'async';
    run: unknown;
    all: unknown[];
    get: unknown;
    values: unknown[][];
}
export declare abstract class PreparedQuery<T extends PreparedQueryConfig> {
    abstract run(placeholderValues?: Record<string, unknown>): ResultKind<T['type'], T['run']>;
    abstract all(placeholderValues?: Record<string, unknown>): ResultKind<T['type'], T['all']>;
    abstract get(placeholderValues?: Record<string, unknown>): ResultKind<T['type'], T['get']>;
    abstract values(placeholderValues?: Record<string, unknown>): ResultKind<T['type'], T['values']>;
}
export declare abstract class SQLiteSession<TResultKind extends 'sync' | 'async' = 'sync' | 'async', TRunResult = unknown> {
    protected dialect: SQLiteDialect;
    constructor(dialect: SQLiteDialect);
    abstract prepareQuery(query: Query, fields?: SelectFieldsOrdered): PreparedQuery<PreparedQueryConfig & {
        type: TResultKind;
    }>;
    prepareOneTimeQuery(query: Query, fields?: SelectFieldsOrdered): PreparedQuery<PreparedQueryConfig & {
        type: TResultKind;
    }>;
    abstract exec(query: string): void;
    run(query: SQL): ResultKind<TResultKind, TRunResult>;
    all<T = unknown>(query: SQL): ResultKind<TResultKind, T[]>;
    get<T = unknown>(query: SQL): ResultKind<TResultKind, T>;
    values<T extends any[] = unknown[]>(query: SQL): ResultKind<TResultKind, T[]>;
}
interface ResultHKT {
    readonly $brand: 'ResultHKT';
    readonly config: unknown;
    readonly type: unknown;
}
interface SyncResultHKT extends ResultHKT {
    readonly type: this['config'];
}
interface AsyncResultHKT extends ResultHKT {
    readonly type: Promise<this['config']>;
}
export declare type ResultKind<TType extends 'sync' | 'async', TResult> = (('sync' extends TType ? SyncResultHKT : AsyncResultHKT) & {
    readonly config: TResult;
})['type'];
export {};
//# sourceMappingURL=session.d.ts.map